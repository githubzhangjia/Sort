//堆排序  ：O(N *logN)
//利用堆的性质，先建一个大堆，使堆顶存放最大的元素，再依次用堆顶元素和相对最后的一个元素交换，从而把最大的排到后面
//每交换一次，均需要把剩下的元素向下调整一次

void _AdjustDown(int *a, int size, int parent)//向下调整 
{ 
  int child = parent * 2 + 1; 
  
  while (child < size) 
  { 
    if (a[child] < a[child + 1]&&(child+1 < size)) 
    { 
    child++; 
    } 
    if (a[child]>a[parent]) 
    { 
      swap(a[child], a[parent]);
      parent = child; child = parent * 2 + 1;
    } 
    else 
      break; 
  }
}
void HeapSort(int *a, int length)
{ 
  for (int i = (length-2)/2; i >=0 ; i--)//建堆 
  { 
    _AdjustDown(a, length, i); 
  }
  for (int i = 0; i < length; i++)//排序 
  { 
    swap(a[0], a[length - 1 - i]);
    _AdjustDown(a, length-i-1, 0); 
  } 
}
